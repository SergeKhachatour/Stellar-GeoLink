name: Deploy to Azure Web App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x' # Use Node.js 18 LTS

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Archive production artifacts
        run: |
          # Create a proper Azure Web App structure
          mkdir -p azure-app
          cp -r backend/* azure-app/
          
          # Create a package.json in the root for Azure
          cat > azure-app/package.json << 'EOF'
          {
            "name": "geolink-backend",
            "version": "1.0.0",
            "main": "app.js",
            "scripts": {
              "start": "node app.js"
            },
            "dependencies": {
              "axios": "^1.8.3",
              "bcrypt": "^5.1.1",
              "cors": "^2.8.5",
              "dotenv": "^16.4.7",
              "express": "^4.21.2",
              "express-rate-limit": "^7.5.0",
              "ioredis": "^5.6.0",
              "jsonwebtoken": "^9.0.2",
              "nodemailer": "^6.9.3",
              "pg": "^8.14.1",
              "redis": "^4.6.7",
              "swagger-jsdoc": "^6.2.8",
              "swagger-ui-express": "^4.6.3"
            }
          }
          EOF
          
          # Create startup script for Linux Azure Web App
          cat > azure-app/startup.sh << 'EOF'
          #!/bin/bash
          echo "Starting GeoLink backend..."
          cd /home/site/wwwroot
          npm install
          node app.js
          EOF
          
          chmod +x azure-app/startup.sh
          
          zip -r backend.zip azure-app/*
          zip -r frontend.zip frontend/build/*

      - name: Deploy to Azure Web App using Zip Deploy
        run: |
          # Extract credentials from publish profile
          PUBLISH_PROFILE="${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}"
          
          # Use Zip Deploy method from your publish profile
          curl -X POST \
            -H "Content-Type: application/zip" \
            -H "Authorization: Basic $(echo -n '$GeoLink:6qmmlK5DZrCEKzb4zuDSRqjDXTugkf85tTWRQv0sAKCedfcMa5a6S4NTu2hE' | base64)" \
            --data-binary @backend.zip \
            https://geolink-buavavc6gse5c9fw.scm.westus-01.azurewebsites.net/api/zipdeploy
          
          echo "Deployment completed. Checking app status..."
          
          # Wait a moment for deployment to process
          sleep 10
          
          # Test if the app is responding
          curl -f https://geolink-buavavc6gse5c9fw.westus-01.azurewebsites.net/ || echo "App not responding yet"
