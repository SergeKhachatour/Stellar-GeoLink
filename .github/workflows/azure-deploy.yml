name: Deploy to Azure Web App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x' # Use Node.js 18 LTS

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Archive production artifacts
        run: |
          # Create deployment directory
          mkdir -p azure-deploy
          
          # Copy backend files to deployment directory
          cp -r backend/* azure-deploy/
          
          # Create a proper package.json for Azure deployment
          echo '{"name":"geolink-backend","version":"1.0.0","description":"Stellar GeoLink Backend API","main":"server.js","scripts":{"start":"node server.js","dev":"nodemon server.js"},"dependencies":{"express":"^4.18.2","cors":"^2.8.5","dotenv":"^16.3.1","pg":"^8.11.3","bcryptjs":"^2.4.3","jsonwebtoken":"^9.0.2","helmet":"^7.1.0","express-rate-limit":"^7.1.5"},"engines":{"node":">=18.0.0"}}' > azure-deploy/package.json
          
          # Verify the structure
          echo "Deployment directory contents:"
          ls -la azure-deploy/
          echo "Package.json contents:"
          cat azure-deploy/package.json
          
          # Create zip file
          cd azure-deploy
          zip -r ../backend.zip .
          cd ..
          
          # Create frontend zip
          zip -r frontend.zip frontend/build/*

      - name: Deploy to Azure Web App
        run: |
          echo "Deploying to Azure Web App..."
          echo "Backend zip file size:"
          ls -la backend.zip
          
          # Verify zip contents
          echo "Verifying zip contents:"
          unzip -l backend.zip
          
          # Deploy using Azure Web Apps Deploy action
          curl -X POST \
            -H "Content-Type: application/zip" \
            -H "Authorization: Basic $(echo -n '$GeoLink:6qmmlK5DZrCEKzb4zuDSRqjDXTugkf85tTWRQv0sAKCedfcMa5a6S4NTu2hE' | base64)" \
            --data-binary @backend.zip \
            -v \
            --write-out "HTTP Status: %{http_code}\n" \
            https://geolink-buavavc6gse5c9fw.scm.westus-01.azurewebsites.net/api/zipdeploy
          
          echo "Deployment completed. Waiting for app to start..."
          sleep 30
          
          # Test if the app is responding
          curl -f https://geolink-buavavc6gse5c9fw.westus-01.azurewebsites.net/ || echo "App not responding yet"
