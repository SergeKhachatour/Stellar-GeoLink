name: Deploy to Azure Web App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x' # Use Node.js 18 LTS

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Archive production artifacts
        run: |
          # Create a simple structure - deploy backend files directly
          mkdir -p deploy-root
          
          # Copy all backend files directly to root
          cp -r backend/* deploy-root/
          
          # Ensure package.json exists and is correct
          echo "Verifying package.json exists..."
          ls -la deploy-root/package.json
          cat deploy-root/package.json
          
          # List all files being deployed
          echo "Contents of deploy-root directory:"
          ls -la deploy-root/
          
          # Create the zip file with all files in root
          cd deploy-root
          zip -r ../backend.zip *
          cd ..
          
          zip -r frontend.zip frontend/build/*

      - name: Deploy to Azure Web App using FTP
        run: |
          echo "Deploying to Azure Web App using FTP..."
          echo "Backend zip file size:"
          ls -la backend.zip
          
          # Extract files from zip
          unzip -o backend.zip -d temp-deploy/
          echo "Files in temp-deploy:"
          ls -la temp-deploy/
          
          # Use FTP to upload files (alternative method)
          # This is a fallback - the zip deploy should work
          echo "Attempting zip deploy with verbose output..."
          
          # Use Zip Deploy method with proper authentication
          curl -X POST \
            -H "Content-Type: application/zip" \
            -H "Authorization: Basic $(echo -n '$GeoLink:6qmmlK5DZrCEKzb4zuDSRqjDXTugkf85tTWRQv0sAKCedfcMa5a6S4NTu2hE' | base64)" \
            --data-binary @backend.zip \
            -v \
            --write-out "HTTP Status: %{http_code}\n" \
            https://geolink-buavavc6gse5c9fw.scm.westus-01.azurewebsites.net/api/zipdeploy
          
          echo "Deployment completed. Checking app status..."
          
          # Wait a moment for deployment to process
          sleep 30
          
          # Test if the app is responding
          curl -f https://geolink-buavavc6gse5c9fw.westus-01.azurewebsites.net/ || echo "App not responding yet"
