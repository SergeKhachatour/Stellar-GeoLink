name: Deploy to Azure Web App

on:
  push:
    branches:
      - main # Trigger on pushes to the main branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: azure

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x' # Use Node.js 18 LTS

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Archive production artifacts
        run: |
          # Create deployment directory
          mkdir -p azure-deploy
          
          # Copy backend files to deployment directory
          cp -r backend/* azure-deploy/
          
          # Copy frontend build files to deployment directory
          cp -r frontend/build azure-deploy/public
          
          # Create a proper package.json for Azure deployment
          echo '{"name":"geolink-backend","version":"1.0.0","description":"Stellar GeoLink Backend API","main":"app.js","scripts":{"start":"node app.js","dev":"nodemon app.js"},"dependencies":{"express":"^4.18.2","cors":"^2.8.5","dotenv":"^16.3.1","pg":"^8.11.3","bcryptjs":"^2.4.3","jsonwebtoken":"^9.0.2","helmet":"^7.1.0","express-rate-limit":"^7.1.5"},"engines":{"node":">=18.0.0"}}' > azure-deploy/package.json
          
          # Verify the structure
          echo "Deployment directory contents:"
          ls -la azure-deploy/
          echo "Frontend build contents:"
          ls -la azure-deploy/public/
          echo "Package.json contents:"
          cat azure-deploy/package.json
          
          # Create zip file
          cd azure-deploy
          zip -r ../backend.zip .
          cd ..

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v2
        with:
          app-name: 'GeoLink'
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: backend.zip
